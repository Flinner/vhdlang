#pragma once
#include <regex>
#include <string>

namespace vhdlang {

// RES_ for reserved word
enum class TerminalName {
    WHITESPACE,
    NEWLINE,
    DOT,
    SEMICOLON,
    COLON,
    PLUS,
    MINUS,
    STAR,
    CARET,
    EQUALS,
    EXCLAMATION,
    QUESTION,
    OPEN_PARENTHESIS,
    CLOSE_PARENTHESIS,
    OPEN_BRACKET,
    CLOSE_BRACKET,
    OPEN_CURLY,
    CLOSE_CURLY,
    GREATER_THAN,
    LESS_THAN,
    SINGLE_QUOTE,
    DOUBLE_QUOTE,
    BACKSLASH,
    COMMENT,
    INTEGER,
    RES_ABS,
    RES_ACCESS,
    RES_AFTER,
    RES_ALIAS,
    RES_ALL,
    RES_AND,
    RES_ARCHITECTURE,
    RES_ARRAY,
    RES_ASSERT,
    RES_ATTRIBUTE,
    RES_BEGIN,
    RES_BLOCK,
    RES_BODY,
    RES_BUFFER,
    RES_BUS,
    RES_CASE,
    RES_COMPONENT,
    RES_CONFIGURATION,
    RES_CONSTANT,
    RES_DISCONNECT,
    RES_DOWNTO,
    RES_ELSE,
    RES_ELSIF,
    RES_END,
    RES_ENTITY,
    RES_EXIT,
    RES_FILE,
    RES_FOR,
    RES_FUNCTION,
    RES_GENERATE,
    RES_GENERIC,
    RES_GROUP,
    RES_GUARDED,
    RES_IF,
    RES_IMPURE,
    RES_IN,
    RES_INERTIAL,
    RES_INOUT,
    RES_IS,
    RES_LABEL,
    RES_LIBRARY,
    RES_LINKAGE,
    RES_LITERAL,
    RES_LOOP,
    RES_MAP,
    RES_MOD,
    RES_NAND,
    RES_NEW,
    RES_NEXT,
    RES_NOR,
    RES_NOT,
    RES_NULL,
    RES_OF,
    RES_ON,
    RES_OPEN,
    RES_OR,
    RES_OTHERS,
    RES_OUT,
    RES_PACKAGE,
    RES_PORT,
    RES_POSTPONED,
    RES_PROCEDURE,
    RES_PROCESS,
    RES_PURE,
    RES_RANGE,
    RES_RECORD,
    RES_REGISTER,
    RES_REJECT,
    RES_REM,
    RES_REPORT,
    RES_RETURN,
    RES_ROL,
    RES_ROR,
    RES_SELECT,
    RES_SEVERITY,
    RES_SIGNAL,
    RES_SHARED,
    RES_SLA,
    RES_SLL,
    RES_SRA,
    RES_SRL,
    RES_SUBTYPE,
    RES_THEN,
    RES_TO,
    RES_TRANSPORT,
    RES_TYPE,
    RES_UNAFFECTED,
    RES_UNITS,
    RES_UNTIL,
    RES_USE,
    RES_VARIABLE,
    RES_WAIT,
    RES_WHEN,
    RES_WHILE,
    RES_WITH,
    RES_XNOR,
    RES_XOR,
    IDENTIFIER
};

class Terminal {
private:
    const TerminalName name;
    const std::string nameString;
    const std::regex terminalRegex;

public:
    Terminal(TerminalName name, const std::string& nameString, const std::string& regexText) :
        name(name), nameString(nameString),
        terminalRegex(std::regex(regexText, std::regex::icase)) {};
    const TerminalName& getName() const { return name; }
    const std::string& getNameString() const { return nameString; }
    const std::regex& getRegex() const { return terminalRegex; }
};

// Huge list of terminals, order matter, lower index => matches first
static std::vector<Terminal> vhdlTerminals = {
    Terminal(TerminalName::WHITESPACE, "Whitespace", "[ \\t]+"),
    Terminal(TerminalName::NEWLINE, "NEWLINE", "\\n+"),
    Terminal(TerminalName::DOT, "DOT", "\\."),
    Terminal(TerminalName::SEMICOLON, "SEMICOLON", ";"),
    Terminal(TerminalName::COLON, "COLON", ":"),
    Terminal(TerminalName::PLUS, "PLUS", "\\+"),
    Terminal(TerminalName::MINUS, "MINUS", "-"),
    Terminal(TerminalName::STAR, "STAR", "\\*"),
    Terminal(TerminalName::CARET, "CARET", "\\^"),
    Terminal(TerminalName::EQUALS, "EQUALS", "="),
    Terminal(TerminalName::EXCLAMATION, "EXCLAMATION", "!"),
    Terminal(TerminalName::QUESTION, "QUESTION", "\\?"),
    Terminal(TerminalName::OPEN_PARENTHESIS, "OPEN_PARENTHESIS", "\\("),
    Terminal(TerminalName::CLOSE_PARENTHESIS, "CLOSE_PARENTHESIS", "\\)"),
    Terminal(TerminalName::OPEN_BRACKET, "OPEN_BRACKET", "\\["),
    Terminal(TerminalName::CLOSE_BRACKET, "CLOSE_BRACKET", "\\]"),
    Terminal(TerminalName::OPEN_CURLY, "OPEN_CURLY", "\\{"),
    Terminal(TerminalName::CLOSE_CURLY, "CLOSE_CURLY", "\\}"),
    Terminal(TerminalName::GREATER_THAN, "GREATER_THAN", ">"),
    Terminal(TerminalName::LESS_THAN, "LESS_THAN", "<"),
    Terminal(TerminalName::SINGLE_QUOTE, "SINGLE_QUOTE", "'"),
    Terminal(TerminalName::DOUBLE_QUOTE, "DOUBLE_QUOTE", "\""),
    Terminal(TerminalName::BACKSLASH, "BACKSLASH", "\\\\"),
    Terminal(TerminalName::COMMENT, "Comment", "--[^\\n]+"),
    Terminal(TerminalName::INTEGER, "Integer", "\\d+"),
    Terminal(TerminalName::RES_ABS, "ABS", "\\bABS\\b"),
    Terminal(TerminalName::RES_ACCESS, "ACCESS", "\\bACCESS\\b"),
    Terminal(TerminalName::RES_AFTER, "AFTER", "\\bAFTER\\b"),
    Terminal(TerminalName::RES_ALIAS, "ALIAS", "\\bALIAS\\b"),
    Terminal(TerminalName::RES_ALL, "ALL", "\\bALL\\b"),
    Terminal(TerminalName::RES_AND, "AND", "\\bAND\\b"),
    Terminal(TerminalName::RES_ARCHITECTURE, "ARCHITECTURE", "\\bARCHITECTURE\\b"),
    Terminal(TerminalName::RES_ARRAY, "ARRAY", "\\bARRAY\\b"),
    Terminal(TerminalName::RES_ASSERT, "ASSERT", "\\bASSERT\\b"),
    Terminal(TerminalName::RES_ATTRIBUTE, "ATTRIBUTE", "\\bATTRIBUTE\\b"),
    Terminal(TerminalName::RES_BEGIN, "BEGIN", "\\bBEGIN\\b"),
    Terminal(TerminalName::RES_BLOCK, "BLOCK", "\\bBLOCK\\b"),
    Terminal(TerminalName::RES_BODY, "BODY", "\\bBODY\\b"),
    Terminal(TerminalName::RES_BUFFER, "BUFFER", "\\bBUFFER\\b"),
    Terminal(TerminalName::RES_BUS, "BUS", "\\bBUS\\b"),
    Terminal(TerminalName::RES_CASE, "CASE", "\\bCASE\\b"),
    Terminal(TerminalName::RES_COMPONENT, "COMPONENT", "\\bCOMPONENT\\b"),
    Terminal(TerminalName::RES_CONFIGURATION, "CONFIGURATION", "\\bCONFIGURATION\\b"),
    Terminal(TerminalName::RES_CONSTANT, "CONSTANT", "\\bCONSTANT\\b"),
    Terminal(TerminalName::RES_DISCONNECT, "DISCONNECT", "\\bDISCONNECT\\b"),
    Terminal(TerminalName::RES_DOWNTO, "DOWNTO", "\\bDOWNTO\\b"),
    Terminal(TerminalName::RES_ELSE, "ELSE", "\\bELSE\\b"),
    Terminal(TerminalName::RES_ELSIF, "ELSIF", "\\bELSIF\\b"),
    Terminal(TerminalName::RES_END, "END", "\\bEND\\b"),
    Terminal(TerminalName::RES_ENTITY, "ENTITY", "\\bENTITY\\b"),
    Terminal(TerminalName::RES_EXIT, "EXIT", "\\bEXIT\\b"),
    Terminal(TerminalName::RES_FILE, "FILE", "\\bFILE\\b"),
    Terminal(TerminalName::RES_FOR, "FOR", "\\bFOR\\b"),
    Terminal(TerminalName::RES_FUNCTION, "FUNCTION", "\\bFUNCTION\\b"),
    Terminal(TerminalName::RES_GENERATE, "GENERATE", "\\bGENERATE\\b"),
    Terminal(TerminalName::RES_GENERIC, "GENERIC", "\\bGENERIC\\b"),
    Terminal(TerminalName::RES_GROUP, "GROUP", "\\bGROUP\\b"),
    Terminal(TerminalName::RES_GUARDED, "GUARDED", "\\bGUARDED\\b"),
    Terminal(TerminalName::RES_IF, "IF", "\\bIF\\b"),
    Terminal(TerminalName::RES_IMPURE, "IMPURE", "\\bIMPURE\\b"),
    Terminal(TerminalName::RES_IN, "IN", "\\bIN\\b"),
    Terminal(TerminalName::RES_INERTIAL, "INERTIAL", "\\bINERTIAL\\b"),
    Terminal(TerminalName::RES_INOUT, "INOUT", "\\bINOUT\\b"),
    Terminal(TerminalName::RES_IS, "IS", "\\bIS\\b"),
    Terminal(TerminalName::RES_LABEL, "LABEL", "\\bLABEL\\b"),
    Terminal(TerminalName::RES_LIBRARY, "LIBRARY", "\\bLIBRARY\\b"),
    Terminal(TerminalName::RES_LINKAGE, "LINKAGE", "\\bLINKAGE\\b"),
    Terminal(TerminalName::RES_LITERAL, "LITERAL", "\\bLITERAL\\b"),
    Terminal(TerminalName::RES_LOOP, "LOOP", "\\bLOOP\\b"),
    Terminal(TerminalName::RES_MAP, "MAP", "\\bMAP\\b"),
    Terminal(TerminalName::RES_MOD, "MOD", "\\bMOD\\b"),
    Terminal(TerminalName::RES_NAND, "NAND", "\\bNAND\\b"),
    Terminal(TerminalName::RES_NEW, "NEW", "\\bNEW\\b"),
    Terminal(TerminalName::RES_NEXT, "NEXT", "\\bNEXT\\b"),
    Terminal(TerminalName::RES_NOR, "NOR", "\\bNOR\\b"),
    Terminal(TerminalName::RES_NOT, "NOT", "\\bNOT\\b"),
    Terminal(TerminalName::RES_NULL, "NULL", "\\bNULL\\b"),
    Terminal(TerminalName::RES_OF, "OF", "\\bOF\\b"),
    Terminal(TerminalName::RES_ON, "ON", "\\bON\\b"),
    Terminal(TerminalName::RES_OPEN, "OPEN", "\\bOPEN\\b"),
    Terminal(TerminalName::RES_OR, "OR", "\\bOR\\b"),
    Terminal(TerminalName::RES_OTHERS, "OTHERS", "\\bOTHERS\\b"),
    Terminal(TerminalName::RES_OUT, "OUT", "\\bOUT\\b"),
    Terminal(TerminalName::RES_PACKAGE, "PACKAGE", "\\bPACKAGE\\b"),
    Terminal(TerminalName::RES_PORT, "PORT", "\\bPORT\\b"),
    Terminal(TerminalName::RES_POSTPONED, "POSTPONED", "\\bPOSTPONED\\b"),
    Terminal(TerminalName::RES_PROCEDURE, "PROCEDURE", "\\bPROCEDURE\\b"),
    Terminal(TerminalName::RES_PROCESS, "PROCESS", "\\bPROCESS\\b"),
    Terminal(TerminalName::RES_PURE, "PURE", "\\bPURE\\b"),
    Terminal(TerminalName::RES_RANGE, "RANGE", "\\bRANGE\\b"),
    Terminal(TerminalName::RES_RECORD, "RECORD", "\\bRECORD\\b"),
    Terminal(TerminalName::RES_REGISTER, "REGISTER", "\\bREGISTER\\b"),
    Terminal(TerminalName::RES_REJECT, "REJECT", "\\bREJECT\\b"),
    Terminal(TerminalName::RES_REM, "REM", "\\bREM\\b"),
    Terminal(TerminalName::RES_REPORT, "REPORT", "\\bREPORT\\b"),
    Terminal(TerminalName::RES_RETURN, "RETURN", "\\bRETURN\\b"),
    Terminal(TerminalName::RES_ROL, "ROL", "\\bROL\\b"),
    Terminal(TerminalName::RES_ROR, "ROR", "\\bROR\\b"),
    Terminal(TerminalName::RES_SELECT, "SELECT", "\\bSELECT\\b"),
    Terminal(TerminalName::RES_SEVERITY, "SEVERITY", "\\bSEVERITY\\b"),
    Terminal(TerminalName::RES_SIGNAL, "SIGNAL", "\\bSIGNAL\\b"),
    Terminal(TerminalName::RES_SHARED, "SHARED", "\\bSHARED\\b"),
    Terminal(TerminalName::RES_SLA, "SLA", "\\bSLA\\b"),
    Terminal(TerminalName::RES_SLL, "SLL", "\\bSLL\\b"),
    Terminal(TerminalName::RES_SRA, "SRA", "\\bSRA\\b"),
    Terminal(TerminalName::RES_SRL, "SRL", "\\bSRL\\b"),
    Terminal(TerminalName::RES_SUBTYPE, "SUBTYPE", "\\bSUBTYPE\\b"),
    Terminal(TerminalName::RES_THEN, "THEN", "\\bTHEN\\b"),
    Terminal(TerminalName::RES_TO, "TO", "\\bTO\\b"),
    Terminal(TerminalName::RES_TRANSPORT, "TRANSPORT", "\\bTRANSPORT\\b"),
    Terminal(TerminalName::RES_TYPE, "TYPE", "\\bTYPE\\b"),
    Terminal(TerminalName::RES_UNAFFECTED, "UNAFFECTED", "\\bUNAFFECTED\\b"),
    Terminal(TerminalName::RES_UNITS, "UNITS", "\\bUNITS\\b"),
    Terminal(TerminalName::RES_UNTIL, "UNTIL", "\\bUNTIL\\b"),
    Terminal(TerminalName::RES_USE, "USE", "\\bUSE\\b"),
    Terminal(TerminalName::RES_VARIABLE, "VARIABLE", "\\bVARIABLE\\b"),
    Terminal(TerminalName::RES_WAIT, "WAIT", "\\bWAIT\\b"),
    Terminal(TerminalName::RES_WHEN, "WHEN", "\\bWHEN\\b"),
    Terminal(TerminalName::RES_WHILE, "WHILE", "\\bWHILE\\b"),
    Terminal(TerminalName::RES_WITH, "WITH", "\\bWITH\\b"),
    Terminal(TerminalName::RES_XNOR, "XNOR", "\\bXNOR\\b"),
    Terminal(TerminalName::RES_XOR, "XOR", "\\bXOR\\b"),
    Terminal(TerminalName::IDENTIFIER, "Identifier", "\\w+")};
} // namespace vhdlang
